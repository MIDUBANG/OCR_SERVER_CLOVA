name: ci-cd-pipeline

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    steps:

      # Checkout
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/clova:latest
      
      # Docker-compose build & push
      - name: Docker Compose build & push
        run: |
          docker-compose build
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/ocr_server_clova_nginx:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      # Github Action IP 가져오기
      - name: get Github Actions IP
        id: ip
        uses: haythem/public-ip@v1.3

      # AWS IAM for EC2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_EC2_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_EC2_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # EC2 보안그룹에 현재 ip 추가
      - name: Add Github Actions IP to Security Group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_EC2_SG_ID }} --protocol tcp --port 22 --cidr ${{steps.ip.outputs.ipv4 }}/32

      # yml 파일 ec2에 복사
      - name: Copy File via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          port: 22
          source: "docker-compose.yml"
          target: "/home/ubuntu"

      # EC2 접속 & 서버 올리기
      - name: Executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          port: 22
          script: |
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/ocr_server_clova_nginx:latest
            sudo docker-compose up -d
            sudo docker image prune -f

      # EC2 보안그룹에서 추가한 ip 삭제
      - name: Remove Github Actions IP from Security Group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_EC2_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4}}/32
